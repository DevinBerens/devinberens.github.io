{"version":3,"file":"static/js/270.1ca46df0.chunk.js","mappings":"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","sources":["components/global/utils.js","components/home/moviePopover.js","components/navBar/index.js","components/upcoming/index.js"],"sourcesContent":["export const apiKey = \"a0eb7b879a2a1ca6caf51d644e820571\";\nexport const moviePath = \"https://api.themoviedb.org/3/\";\nexport const imagePath = \"https://image.tmdb.org/t/p/w185\";\nexport const smallImagePath = \"https://image.tmdb.org/t/p/w92\";\nexport const bigImagePath = \"https://image.tmdb.org/t/p/w342\";\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport { bigImagePath, imagePath } from \"../global/utils\";\nimport { findIndex } from \"lodash\";\n\nlet MoviePopover = (props) => {\n  const { closePopover, clickedMovie, toggleFavorite, favoriteMovies } = props;\n\n  return (\n    <div\n      className=\"moviePopover\"\n      style={{\n        top: `${window.innerHeight / 8}px`,\n        left:\n          window.innerWidth >= 1000\n            ? `${window.innerWidth / 2 - 500}px`\n            : `25px`,\n        width:\n          window.innerWidth >= 1000 ? `1000px` : `${window.innerWidth - 50}px`,\n        height: `${window.innerHeight - window.innerHeight / 4}px`,\n      }}\n    >\n      <div className=\"popoverWrapper\">\n        <FontAwesomeIcon\n          className=\"closePopover\"\n          onClick={closePopover}\n          icon={solid(\"x\")}\n        />\n        <div className=\"posterWrapper\">\n          <img\n            className=\"moviePoster\"\n            src={`${window.innerWidth >= 1000 ? bigImagePath : imagePath}${\n              clickedMovie.poster_path\n            }`}\n            alt=\"movie poster\"\n          />\n        </div>\n        <div className=\"popoverBody\">\n          <h2 className=\"movieTitle\">{clickedMovie.title}</h2>\n          <div className=\"popoverFooter\">\n            <button\n              className=\"footerButton\"\n              style={{\n                width: window.innerWidth >= 1000 ? \"30%\" : \"50%\",\n              }}\n              onClick={toggleFavorite.bind(this, clickedMovie)}\n            >\n              <FontAwesomeIcon\n                icon={\n                  findIndex(favoriteMovies, (m) => m.id === clickedMovie.id) >\n                  -1\n                    ? solid(\"heart\")\n                    : regular(\"heart\")\n                }\n                className=\"favoritesHeart\"\n              />\n              <div>\n                {findIndex(favoriteMovies, (m) => m.id === clickedMovie.id) > -1\n                  ? \"Remove \"\n                  : \"Add \"}\n                Movie\n              </div>\n            </button>\n            <button\n              className=\"footerButton\"\n              style={{\n                width: window.innerWidth >= 1000 ? \"30%\" : \"45%\",\n              }}\n            >\n              <a\n                href={`https://www.youtube.com/watch?v=${clickedMovie.trailer?.key}`}\n                className=\"trailerLink\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Watch Trailer\n              </a>\n            </button>\n          </div>\n          <div className=\"ft18\">\n            <b>Directed by:</b> {clickedMovie.director?.name}\n          </div>\n          <div className=\"ft18\">\n            <b>Genre:</b>{\" \"}\n            {clickedMovie.genres.map(\n              (genre, i) =>\n                `${genre.name}${i + 1 < clickedMovie.genres.length ? \", \" : \"\"}`\n            )}\n          </div>\n          <div className=\"ft18\">\n            <b>Rating:</b> {clickedMovie.vote_average}\n          </div>\n          <div className=\"ft18\">\n            <b>Release Date:</b> {clickedMovie.release_date}\n          </div>\n          <div className=\"ft18\">\n            <b>Overview:</b> {clickedMovie.overview}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePopover;\n","import React, { useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { apiKey, moviePath, smallImagePath } from \"../global/utils\";\nimport { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nlet NavBar = (props) => {\n  const { movieClick } = props;\n  let [showSearch, setShowSearch] = useState(false);\n  let [isSearch, setIsSearch] = useState(false);\n  let [searchResults, setSearchResults] = useState([]);\n\n  let handleSubmit = useCallback((e) => {\n    e.preventDefault();\n    if (e.target[0].value) {\n      fetch(\n        `${moviePath}search/movie?api_key=${apiKey}&language=en-US&page=1&include_adult=false&query=${e.target[0].value}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setSearchResults(data.results);\n          setIsSearch(true);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      setSearchResults([]);\n      setIsSearch(true);\n    }\n  }, []);\n\n  let toggleSearch = useCallback(() => {\n    setShowSearch(!showSearch);\n    setSearchResults([]);\n    setIsSearch(false);\n  }, [showSearch]);\n\n  let clickMovie = useCallback(\n    (movie) => {\n      movieClick(movie);\n      setShowSearch(false);\n      setIsSearch(false);\n      setSearchResults([]);\n    },\n    [movieClick]\n  );\n\n  return (\n    <div className=\"navBar\">\n      <Link\n        to=\"/\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/\" ? \"2px solid #5a18c9\" : \"none\",\n        }}\n      >\n        Home\n      </Link>\n      <Link\n        to=\"/favorites\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/favorites\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Favorite Movies\n      </Link>\n      <Link\n        to=\"/popular\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/popular\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Popular Movies\n      </Link>\n      <Link\n        to=\"/upcoming\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/upcoming\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Upcoming Movies\n      </Link>\n      <div className=\"rightNav\">\n        <FontAwesomeIcon\n          className=\"search\"\n          onClick={toggleSearch}\n          icon={faSearch}\n        />\n      </div>\n      {showSearch && (\n        <div className=\"searchPopover\">\n          <form onSubmit={handleSubmit}>\n            <input className=\"searchInput\" placeholder=\"Find a Movie\" />\n            <button className=\"searchSubmit\" type=\"submit\">\n              Search\n            </button>\n          </form>\n          {searchResults.length ? (\n            <div className=\"searchResults\">\n              {searchResults.map((movie, i) => (\n                <div\n                  className=\"searchResult\"\n                  onClick={clickMovie.bind(this, movie)}\n                  key={i}\n                >\n                  <img\n                    className=\"moviePoster\"\n                    src={`${smallImagePath}${movie.poster_path}`}\n                    alt=\"movie poster\"\n                  />\n                  <div>\n                    <div className=\"resultTitle\">{movie.title}</div>\n                    <div className=\"resultRating\">\n                      <FontAwesomeIcon\n                        className=\"movieRatingIcon\"\n                        icon={solid(\"star\")}\n                      />{\" \"}\n                      {movie.vote_average}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : isSearch ? (\n            <div className=\"searchResults\">No Movies Found</div>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport NavBar from \"../navBar\";\nimport { imagePath } from \"../global/utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { findIndex } from \"lodash\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport MoviePopover from \"../home/moviePopover\";\n\nlet Upcoming = (props) => {\n  const {\n    upcomingMovies,\n    favoriteMovies,\n    movieClick,\n    moviePopover,\n    clickedMovie,\n    toggleFavorite,\n    closePopover,\n    showMore,\n  } = props;\n  return (\n    <div className=\"upcomingWrapper\">\n      <NavBar movieClick={movieClick} />\n      {[[\"Upcoming Movies\", ...(upcomingMovies || [])]].map(\n        (category, index) => (\n          <div className=\"categoryWrapper\" key={index}>\n            <h2 className=\"categoryTitle\">{category[0]}</h2>\n            {category?.length > 1 ? (\n              <div className=\"movieWrapper\">\n                {category.map(\n                  (movie, i) =>\n                    i !== 0 && (\n                      <div\n                        className=\"movieBody\"\n                        onClick={movieClick.bind(this, movie)}\n                        key={i}\n                      >\n                        <img\n                          className=\"moviePoster\"\n                          src={`${imagePath}${movie.poster_path}`}\n                          alt=\"movie poster\"\n                        />\n                        <FontAwesomeIcon\n                          icon={\n                            findIndex(\n                              favoriteMovies,\n                              (m) => m.id === movie.id\n                            ) > -1\n                              ? solid(\"heart\")\n                              : regular(\"heart\")\n                          }\n                          onClick={toggleFavorite.bind(this, movie)}\n                          className=\"favoritesButton\"\n                        />\n                        <div className=\"movieTitle\">{movie.title}</div>\n                        <div>\n                          <FontAwesomeIcon\n                            className=\"movieRatingIcon\"\n                            icon={solid(\"star\")}\n                          />{\" \"}\n                          {movie.vote_average}\n                        </div>\n                      </div>\n                    )\n                )}\n                <div\n                  onClick={showMore.bind(this, category[0])}\n                  className=\"showMore\"\n                >\n                  Show More...\n                </div>\n              </div>\n            ) : (\n              <div className=\"noneFound\">No movies found</div>\n            )}\n          </div>\n        )\n      )}\n      {moviePopover && (\n        <MoviePopover\n          closePopover={closePopover}\n          clickedMovie={clickedMovie}\n          toggleFavorite={toggleFavorite}\n          favoriteMovies={favoriteMovies}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Upcoming;\n"],"names":["apiKey","moviePath","imagePath","smallImagePath","bigImagePath","props","closePopover","clickedMovie","toggleFavorite","favoriteMovies","className","style","top","window","innerHeight","left","innerWidth","width","height","onClick","icon","src","poster_path","alt","title","bind","findIndex","m","id","href","trailer","key","target","rel","director","name","genres","map","genre","i","length","vote_average","release_date","overview","movieClick","useState","showSearch","setShowSearch","isSearch","setIsSearch","searchResults","setSearchResults","handleSubmit","useCallback","e","preventDefault","value","fetch","then","response","json","data","results","catch","err","console","log","toggleSearch","clickMovie","movie","to","borderBottom","location","pathname","faSearch","onSubmit","placeholder","type","upcomingMovies","moviePopover","showMore","category","index"],"sourceRoot":""}