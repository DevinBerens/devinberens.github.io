{"version":3,"file":"static/js/972.730a8d03.chunk.js","mappings":"kOAkFA,UA1EgB,SAACA,GACf,IACEC,EAMED,EANFC,eACAC,EAKEF,EALFE,WACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,eACAC,EACEN,EADFM,aAGF,OACE,iBAAKC,UAAU,mBAAf,WACE,SAAC,IAAD,CAAQL,WAAYA,IACnB,CAAC,CAAC,mBAAF,eAAyBD,GAAkB,MAAMO,KAChD,SAACC,EAAUC,GAAX,OACE,iBAAKH,UAAU,kBAAf,WACE,eAAIA,UAAU,gBAAd,SAA+BE,EAAS,MAC/B,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUE,QAAS,GAClB,gBAAKJ,UAAU,eAAf,SACGE,EAASD,KACR,SAACI,EAAOC,GAAR,OACQ,IAANA,IACE,iBACEN,UAAU,YACVO,QAASZ,EAAWa,KAAK,EAAMH,GAFjC,WAKE,gBACEL,UAAU,cACVS,IAAG,UAAKC,EAAAA,IAAL,OAAiBL,EAAMM,aAC1BC,IAAI,kBAEN,SAAC,IAAD,CACEC,MACEC,EAAAA,EAAAA,WACEpB,GACA,SAACqB,GAAD,OAAOA,EAAEC,KAAOX,EAAMW,OACnB,EAHL,UAOFT,QAAST,EAAeU,KAAK,EAAMH,GACnCL,UAAU,qBAEZ,gBAAKA,UAAU,aAAf,SAA6BK,EAAMY,SACnC,4BACE,SAAC,IAAD,CACEjB,UAAU,kBACVa,KAAI,MACH,IACFR,EAAMa,kBAzBJZ,SAgCf,gBAAKN,UAAU,YAAf,+BA1CkCG,MA+CzCP,IACC,SAAC,IAAD,CACEG,aAAcA,EACdF,aAAcA,EACdC,eAAgBA,EAChBJ,eAAgBA,S,qJC3EnB,IAAMyB,EAAS,mCACTC,EAAY,gCACZV,EAAY,kCACZW,EAAiB,iCACjBC,EAAe,mC,+FCqG5B,IAnGmB,SAAC7B,GAAW,IAAD,IACpBM,EAA+DN,EAA/DM,aAAcF,EAAiDJ,EAAjDI,aAAcC,EAAmCL,EAAnCK,eAAgBJ,EAAmBD,EAAnBC,eAEpD,OACE,gBACEM,UAAU,eACVuB,MAAO,CACLC,IAAI,GAAD,OAAKC,OAAOC,YAAc,EAA1B,MACHC,KACEF,OAAOG,YAAc,IAArB,UACOH,OAAOG,WAAa,EAAI,IAD/B,aAGFC,MACEJ,OAAOG,YAAc,IAArB,mBAA0CH,OAAOG,WAAa,GAA9D,MACFE,OAAO,GAAD,OAAKL,OAAOC,YAAcD,OAAOC,YAAc,EAA/C,OAVV,UAaE,iBAAK1B,UAAU,iBAAf,WACE,SAAC,IAAD,CACEA,UAAU,eACVO,QAASR,EACTc,KAAI,QAEN,gBAAKb,UAAU,gBAAf,UACE,gBACEA,UAAU,cACVS,IAAG,UAAKgB,OAAOG,YAAc,IAAON,EAAAA,GAAeZ,EAAAA,IAAhD,OACDb,EAAac,aAEfC,IAAI,oBAGR,iBAAKZ,UAAU,cAAf,WACE,eAAIA,UAAU,aAAd,SAA4BH,EAAaoB,SACzC,iBAAKjB,UAAU,gBAAf,WACE,oBACEA,UAAU,eACVuB,MAAO,CACLM,MAAOJ,OAAOG,YAAc,IAAO,MAAQ,OAE7CrB,QAAST,EAAeU,K,UAAWX,GALrC,WAOE,SAAC,IAAD,CACEgB,MACEC,EAAAA,EAAAA,WAAUpB,GAAgB,SAACqB,GAAD,OAAOA,EAAEC,KAAOnB,EAAamB,OACtD,EADD,UAKFhB,UAAU,oBAEZ,4BACGc,EAAAA,EAAAA,WAAUpB,GAAgB,SAACqB,GAAD,OAAOA,EAAEC,KAAOnB,EAAamB,OAAO,EAC3D,UACA,OAHN,eAOF,mBACEhB,UAAU,eACVuB,MAAO,CACLM,MAAOJ,OAAOG,YAAc,IAAO,MAAQ,OAH/C,UAME,cACEG,KAAI,oDAAqClC,EAAamC,eAAlD,aAAqC,EAAsBC,KAC/DjC,UAAU,cACVkC,OAAO,SACPC,IAAI,aAJN,iCAUJ,iBAAKnC,UAAU,OAAf,WACE,wCADF,cACuBH,EAAauC,gBADpC,aACuB,EAAuBC,SAE9C,iBAAKrC,UAAU,OAAf,WACE,kCAAc,IACbH,EAAayC,OAAOrC,KACnB,SAACsC,EAAOjC,GAAR,gBACKiC,EAAMF,MADX,OACkB/B,EAAI,EAAIT,EAAayC,OAAOlC,OAAS,KAAO,WAGlE,iBAAKJ,UAAU,OAAf,WACE,mCADF,IACkBH,EAAaqB,iBAE/B,iBAAKlB,UAAU,OAAf,WACE,yCADF,IACwBH,EAAa2C,iBAErC,iBAAKxC,UAAU,OAAf,WACE,qCADF,IACoBH,EAAa4C,sB,gGCgD3C,IA1Ia,SAAChD,GACZ,IAAQE,EAAeF,EAAfE,WACR,GAAkC+C,EAAAA,EAAAA,WAAS,GAA3C,eAAKC,EAAL,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAKG,EAAL,KAAeC,EAAf,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,IAAjD,eAAKK,EAAL,KAAoBC,EAApB,KAEIC,GAAeC,EAAAA,EAAAA,cAAY,SAACC,GAC9BA,EAAEC,iBACED,EAAEjB,OAAO,GAAGmB,MACdC,MAAM,GAAD,OACAlC,EAAAA,GADA,gCACiCD,EAAAA,GADjC,4DAC2FgC,EAAEjB,OAAO,GAAGmB,QAEzGE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLV,EAAiBU,EAAKC,SACtBb,GAAY,MAEbc,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,OAE9Bb,EAAiB,IACjBF,GAAY,MAEb,IAECkB,GAAed,EAAAA,EAAAA,cAAY,WAC7BN,GAAeD,GACfK,EAAiB,IACjBF,GAAY,KACX,CAACH,IAEAsB,GAAaf,EAAAA,EAAAA,cACf,SAAC7C,GACCV,EAAWU,GACXuC,GAAc,GACdE,GAAY,GACZE,EAAiB,MAEnB,CAACrD,IAGH,OACE,iBAAKK,UAAU,SAAf,WACE,SAAC,KAAD,CACEkE,GAAG,IACHlE,UAAU,UACVuB,MAAO,CACL4C,aAC+B,MAA7B1C,OAAO2C,SAASC,SAAmB,oBAAsB,QAL/D,mBAUA,SAAC,KAAD,CACEH,GAAG,aACHlE,UAAU,UACVuB,MAAO,CACL4C,aAC+B,eAA7B1C,OAAO2C,SAASC,SACZ,oBACA,QAPV,8BAYA,SAAC,KAAD,CACEH,GAAG,WACHlE,UAAU,UACVuB,MAAO,CACL4C,aAC+B,aAA7B1C,OAAO2C,SAASC,SACZ,oBACA,QAPV,6BAYA,SAAC,KAAD,CACEH,GAAG,YACHlE,UAAU,UACVuB,MAAO,CACL4C,aAC+B,cAA7B1C,OAAO2C,SAASC,SACZ,oBACA,QAPV,8BAYA,gBAAKrE,UAAU,WAAf,UACE,SAAC,IAAD,CACEA,UAAU,SACVO,QAASyD,EACTnD,KAAMyD,EAAAA,QAGT3B,IACC,iBAAK3C,UAAU,gBAAf,WACE,kBAAMuE,SAAUtB,EAAhB,WACE,kBAAOjD,UAAU,cAAcwE,YAAY,kBAC3C,mBAAQxE,UAAU,eAAeyE,KAAK,SAAtC,uBAID1B,EAAc3C,QACb,gBAAKJ,UAAU,gBAAf,SACG+C,EAAc9C,KAAI,SAACI,EAAOC,GAAR,OACjB,iBACEN,UAAU,eACVO,QAAS0D,EAAWzD,K,UAAWH,GAFjC,WAKE,gBACEL,UAAU,cACVS,IAAG,UAAKY,EAAAA,IAAL,OAAsBhB,EAAMM,aAC/BC,IAAI,kBAEN,4BACE,gBAAKZ,UAAU,cAAf,SAA8BK,EAAMY,SACpC,iBAAKjB,UAAU,eAAf,WACE,SAAC,IAAD,CACEA,UAAU,kBACVa,KAAI,MACH,IACFR,EAAMa,qBAdNZ,QAoBTuC,GACF,gBAAK7C,UAAU,gBAAf,6BACE","sources":["components/favorites/index.js","components/global/utils.js","components/home/moviePopover.js","components/navBar/index.js"],"sourcesContent":["import React from \"react\";\nimport NavBar from \"../navBar\";\nimport { imagePath } from \"../global/utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { findIndex } from \"lodash\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport MoviePopover from \"../home/moviePopover\";\n\nlet Favorites = (props) => {\n  const {\n    favoriteMovies,\n    movieClick,\n    moviePopover,\n    clickedMovie,\n    toggleFavorite,\n    closePopover,\n  } = props;\n\n  return (\n    <div className=\"favoritesWrapper\">\n      <NavBar movieClick={movieClick} />\n      {[[\"Favorite Movies\", ...(favoriteMovies || [])]].map(\n        (category, index) => (\n          <div className=\"categoryWrapper\" key={index}>\n            <h2 className=\"categoryTitle\">{category[0]}</h2>\n            {category?.length > 1 ? (\n              <div className=\"movieWrapper\">\n                {category.map(\n                  (movie, i) =>\n                    i !== 0 && (\n                      <div\n                        className=\"movieBody\"\n                        onClick={movieClick.bind(this, movie)}\n                        key={i}\n                      >\n                        <img\n                          className=\"moviePoster\"\n                          src={`${imagePath}${movie.poster_path}`}\n                          alt=\"movie poster\"\n                        />\n                        <FontAwesomeIcon\n                          icon={\n                            findIndex(\n                              favoriteMovies,\n                              (m) => m.id === movie.id\n                            ) > -1\n                              ? solid(\"heart\")\n                              : regular(\"heart\")\n                          }\n                          onClick={toggleFavorite.bind(this, movie)}\n                          className=\"favoritesButton\"\n                        />\n                        <div className=\"movieTitle\">{movie.title}</div>\n                        <div>\n                          <FontAwesomeIcon\n                            className=\"movieRatingIcon\"\n                            icon={solid(\"star\")}\n                          />{\" \"}\n                          {movie.vote_average}\n                        </div>\n                      </div>\n                    )\n                )}\n              </div>\n            ) : (\n              <div className=\"noneFound\">No movies found</div>\n            )}\n          </div>\n        )\n      )}\n      {moviePopover && (\n        <MoviePopover\n          closePopover={closePopover}\n          clickedMovie={clickedMovie}\n          toggleFavorite={toggleFavorite}\n          favoriteMovies={favoriteMovies}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n","export const apiKey = \"a0eb7b879a2a1ca6caf51d644e820571\";\nexport const moviePath = \"https://api.themoviedb.org/3/\";\nexport const imagePath = \"https://image.tmdb.org/t/p/w185\";\nexport const smallImagePath = \"https://image.tmdb.org/t/p/w92\";\nexport const bigImagePath = \"https://image.tmdb.org/t/p/w342\";\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { regular, solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\nimport { bigImagePath, imagePath } from \"../global/utils\";\nimport { findIndex } from \"lodash\";\n\nlet MoviePopover = (props) => {\n  const { closePopover, clickedMovie, toggleFavorite, favoriteMovies } = props;\n\n  return (\n    <div\n      className=\"moviePopover\"\n      style={{\n        top: `${window.innerHeight / 8}px`,\n        left:\n          window.innerWidth >= 1000\n            ? `${window.innerWidth / 2 - 500}px`\n            : `25px`,\n        width:\n          window.innerWidth >= 1000 ? `1000px` : `${window.innerWidth - 50}px`,\n        height: `${window.innerHeight - window.innerHeight / 4}px`,\n      }}\n    >\n      <div className=\"popoverWrapper\">\n        <FontAwesomeIcon\n          className=\"closePopover\"\n          onClick={closePopover}\n          icon={solid(\"x\")}\n        />\n        <div className=\"posterWrapper\">\n          <img\n            className=\"moviePoster\"\n            src={`${window.innerWidth >= 1000 ? bigImagePath : imagePath}${\n              clickedMovie.poster_path\n            }`}\n            alt=\"movie poster\"\n          />\n        </div>\n        <div className=\"popoverBody\">\n          <h2 className=\"movieTitle\">{clickedMovie.title}</h2>\n          <div className=\"popoverFooter\">\n            <button\n              className=\"footerButton\"\n              style={{\n                width: window.innerWidth >= 1000 ? \"30%\" : \"50%\",\n              }}\n              onClick={toggleFavorite.bind(this, clickedMovie)}\n            >\n              <FontAwesomeIcon\n                icon={\n                  findIndex(favoriteMovies, (m) => m.id === clickedMovie.id) >\n                  -1\n                    ? solid(\"heart\")\n                    : regular(\"heart\")\n                }\n                className=\"favoritesHeart\"\n              />\n              <div>\n                {findIndex(favoriteMovies, (m) => m.id === clickedMovie.id) > -1\n                  ? \"Remove \"\n                  : \"Add \"}\n                Movie\n              </div>\n            </button>\n            <button\n              className=\"footerButton\"\n              style={{\n                width: window.innerWidth >= 1000 ? \"30%\" : \"45%\",\n              }}\n            >\n              <a\n                href={`https://www.youtube.com/watch?v=${clickedMovie.trailer?.key}`}\n                className=\"trailerLink\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Watch Trailer\n              </a>\n            </button>\n          </div>\n          <div className=\"ft18\">\n            <b>Directed by:</b> {clickedMovie.director?.name}\n          </div>\n          <div className=\"ft18\">\n            <b>Genre:</b>{\" \"}\n            {clickedMovie.genres.map(\n              (genre, i) =>\n                `${genre.name}${i + 1 < clickedMovie.genres.length ? \", \" : \"\"}`\n            )}\n          </div>\n          <div className=\"ft18\">\n            <b>Rating:</b> {clickedMovie.vote_average}\n          </div>\n          <div className=\"ft18\">\n            <b>Release Date:</b> {clickedMovie.release_date}\n          </div>\n          <div className=\"ft18\">\n            <b>Overview:</b> {clickedMovie.overview}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MoviePopover;\n","import React, { useCallback, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { apiKey, moviePath, smallImagePath } from \"../global/utils\";\nimport { solid } from \"@fortawesome/fontawesome-svg-core/import.macro\";\n\nlet NavBar = (props) => {\n  const { movieClick } = props;\n  let [showSearch, setShowSearch] = useState(false);\n  let [isSearch, setIsSearch] = useState(false);\n  let [searchResults, setSearchResults] = useState([]);\n\n  let handleSubmit = useCallback((e) => {\n    e.preventDefault();\n    if (e.target[0].value) {\n      fetch(\n        `${moviePath}search/movie?api_key=${apiKey}&language=en-US&page=1&include_adult=false&query=${e.target[0].value}`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setSearchResults(data.results);\n          setIsSearch(true);\n        })\n        .catch((err) => console.log(err));\n    } else {\n      setSearchResults([]);\n      setIsSearch(true);\n    }\n  }, []);\n\n  let toggleSearch = useCallback(() => {\n    setShowSearch(!showSearch);\n    setSearchResults([]);\n    setIsSearch(false);\n  }, [showSearch]);\n\n  let clickMovie = useCallback(\n    (movie) => {\n      movieClick(movie);\n      setShowSearch(false);\n      setIsSearch(false);\n      setSearchResults([]);\n    },\n    [movieClick]\n  );\n\n  return (\n    <div className=\"navBar\">\n      <Link\n        to=\"/\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/\" ? \"2px solid #5a18c9\" : \"none\",\n        }}\n      >\n        Home\n      </Link>\n      <Link\n        to=\"/favorites\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/favorites\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Favorite Movies\n      </Link>\n      <Link\n        to=\"/popular\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/popular\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Popular Movies\n      </Link>\n      <Link\n        to=\"/upcoming\"\n        className=\"navItem\"\n        style={{\n          borderBottom:\n            window.location.pathname === \"/upcoming\"\n              ? \"2px solid #5a18c9\"\n              : \"none\",\n        }}\n      >\n        Upcoming Movies\n      </Link>\n      <div className=\"rightNav\">\n        <FontAwesomeIcon\n          className=\"search\"\n          onClick={toggleSearch}\n          icon={faSearch}\n        />\n      </div>\n      {showSearch && (\n        <div className=\"searchPopover\">\n          <form onSubmit={handleSubmit}>\n            <input className=\"searchInput\" placeholder=\"Find a Movie\" />\n            <button className=\"searchSubmit\" type=\"submit\">\n              Search\n            </button>\n          </form>\n          {searchResults.length ? (\n            <div className=\"searchResults\">\n              {searchResults.map((movie, i) => (\n                <div\n                  className=\"searchResult\"\n                  onClick={clickMovie.bind(this, movie)}\n                  key={i}\n                >\n                  <img\n                    className=\"moviePoster\"\n                    src={`${smallImagePath}${movie.poster_path}`}\n                    alt=\"movie poster\"\n                  />\n                  <div>\n                    <div className=\"resultTitle\">{movie.title}</div>\n                    <div className=\"resultRating\">\n                      <FontAwesomeIcon\n                        className=\"movieRatingIcon\"\n                        icon={solid(\"star\")}\n                      />{\" \"}\n                      {movie.vote_average}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : isSearch ? (\n            <div className=\"searchResults\">No Movies Found</div>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavBar;\n"],"names":["props","favoriteMovies","movieClick","moviePopover","clickedMovie","toggleFavorite","closePopover","className","map","category","index","length","movie","i","onClick","bind","src","imagePath","poster_path","alt","icon","findIndex","m","id","title","vote_average","apiKey","moviePath","smallImagePath","bigImagePath","style","top","window","innerHeight","left","innerWidth","width","height","href","trailer","key","target","rel","director","name","genres","genre","release_date","overview","useState","showSearch","setShowSearch","isSearch","setIsSearch","searchResults","setSearchResults","handleSubmit","useCallback","e","preventDefault","value","fetch","then","response","json","data","results","catch","err","console","log","toggleSearch","clickMovie","to","borderBottom","location","pathname","faSearch","onSubmit","placeholder","type"],"sourceRoot":""}